name: Build, Test, and Deploy to ECR

on:
  push:
    branches:
      - main #Trigger workflor on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'  # Make sure this matches the version you are using locally

    - name: Restore dependencies
      run: dotnet restore ./back/Gorra/Gorra.apiminimal/Gorra.apiminimal.csproj

    - name: Build the project with detailed logging
      run: dotnet build ./back/Gorra/Gorra.apiminimal/Gorra.apiminimal.csproj -c Release -v diag
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1  # Optional: Disable telemetry for CI builds

    - name: Run tests (if any)
      run: dotnet test ./back/Gorra/Gorra.apiminimal/Gorra.apiminimal.csproj --no-build

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Build and Push Backend Docker image gorra
      run: |
        docker build -t backend-app ./back/Gorra/Gorra.apiminimal
        docker tag backend-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend-repo:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend-repo:latest
